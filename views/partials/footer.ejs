</main>
    <footer class="footer">
        <div class="footer-content">
            <div class="footer-section">
                <h3>
                    <i class="fas fa-feather-alt"></i>
                    Vernoquill
                </h3>
                <p>A modern blogging platform built with Node.js, Express, and EJS.</p>
            </div>
            <div class="footer-section">
                <h4>Quick Links</h4>
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/about">About</a></li>
                </ul>
            </div>
            <div class="footer-section">
                <h4>Connect</h4>
                <div class="social-links">
                    <a href="https://x.com/devshivnomad"><i class="fab fa-twitter"></i></a>

                    <a href="https://github.com/shivamdev319"><i class="fab fa-github"></i></a>

                    <a href="https://www.linkedin.com/in/shivam-kumar-2a53b0278/"><i class="fab fa-linkedin"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; <%= new Date().getFullYear() %> Vernoquill. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // Mobile navigation toggle
        const hamburger = document.querySelector('.hamburger');
        const navMenu = document.querySelector('.nav-menu');

        hamburger.addEventListener('click', () => {
            hamburger.classList.toggle('active');
            navMenu.classList.toggle('active');
        });

        // Close mobile menu when clicking on a link
        document.querySelectorAll('.nav-link').forEach(n => n.addEventListener('click', () => {
            hamburger.classList.remove('active');
            navMenu.classList.remove('active');
        }));

        // Scroll Progress Bar
        function updateScrollProgress() {
            const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
            const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            const scrolled = (scrollTop / scrollHeight) * 100;
            
            const progressBar = document.querySelector('.scroll-progress-bar');
            if (progressBar) {
                progressBar.style.width = scrolled + '%';
            }
            
            // Header scroll effect
            const header = document.querySelector('.header');
            if (scrollTop > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        }

        // Page Loading Animation
        window.addEventListener('load', function() {
            const loader = document.querySelector('.page-loader');
            if (loader) {
                setTimeout(() => {
                    loader.classList.add('loaded');
                }, 500);
                
                setTimeout(() => {
                    loader.remove();
                }, 1000);
            }
            
            // Animate page content
            document.body.classList.add('page-enter');
        });

        // Typing animation for hero text
        function typeWriter(element, text, delay = 100, startDelay = 0) {
            return new Promise((resolve) => {
                setTimeout(() => {
                    element.innerHTML = '';
                    element.style.opacity = '1';
                    let i = 0;
                    const timer = setInterval(() => {
                        if (i < text.length) {
                            element.innerHTML += text.charAt(i);
                            i++;
                        } else {
                            clearInterval(timer);
                            resolve();
                        }
                    }, delay);
                }, startDelay);
            });
        }

        // Initialize animations
        document.addEventListener('DOMContentLoaded', () => {
            // Add scroll event listener
            window.addEventListener('scroll', updateScrollProgress);
            
            const heroTitle = document.querySelector('.hero-title');
            const heroSubtitle = document.querySelector('.hero-subtitle');
            
            if (heroTitle && heroSubtitle) {
                heroTitle.style.opacity = '0';
                heroSubtitle.style.opacity = '0';
                
                setTimeout(() => {
                    typeWriter(heroTitle, 'Welcome to Vernoquill', 100, 500)
                        .then(() => {
                            return typeWriter(heroSubtitle, 'Where words flow like ink from a quill', 80, 300);
                        });
                }, 1200);
            }

            // Scroll animations
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate');
                    }
                });
            }, observerOptions);

            // Observe elements for animation
            document.querySelectorAll('.post-card, .create-post-section, .blog-posts, .footer-section').forEach(element => {
                element.classList.add('animate-on-scroll');
                observer.observe(element);
            });

            // Add content reveal classes
            document.querySelectorAll('.post-card, .form-group').forEach((element, index) => {
                element.classList.add('content-reveal');
                element.style.animationDelay = (index * 0.1) + 's';
            });

            // Add floating animation to special elements
            document.querySelectorAll('.toggle-form-btn, .nav-logo i').forEach(element => {
                element.classList.add('float-element');
            });
        });

        // Add sparkle effect on hover for special elements
        function createSparkle(e) {
            const sparkle = document.createElement('div');
            sparkle.className = 'sparkle';
            sparkle.style.left = (e.pageX - 4) + 'px';
            sparkle.style.top = (e.pageY - 4) + 'px';
            document.body.appendChild(sparkle);
            
            setTimeout(() => {
                sparkle.remove();
            }, 1000);
        }

        // Enhanced sparkle effects
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.btn-primary, .toggle-form-btn, .social-links a').forEach(btn => {
                btn.addEventListener('mouseenter', (e) => {
                    for (let i = 0; i < 5; i++) {
                        setTimeout(() => {
                            const rect = btn.getBoundingClientRect();
                            const sparkleEvent = {
                                pageX: rect.left + Math.random() * rect.width,
                                pageY: rect.top + Math.random() * rect.height + window.scrollY
                            };
                            createSparkle(sparkleEvent);
                        }, i * 100);
                    }
                });
            });
        });

        // Smooth scrolling for internal links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add mouse trail effect
        let mouseTrail = [];
        document.addEventListener('mousemove', (e) => {
            if (mouseTrail.length > 10) mouseTrail.shift();
            
            const trail = document.createElement('div');
            trail.style.cssText = `
                position: fixed;
                width: 4px;
                height: 4px;
                background: radial-gradient(circle, rgba(52,152,219,0.8), transparent);
                border-radius: 50%;
                pointer-events: none;
                z-index: 10000;
                left: ${e.clientX}px;
                top: ${e.clientY}px;
                animation: trailFade 1s ease-out forwards;
            `;
            
            document.body.appendChild(trail);
            mouseTrail.push(trail);
            
            setTimeout(() => {
                if (trail.parentNode) {
                    trail.remove();
                }
            }, 1000);
        });

        // Delegated delete handler
        document.addEventListener('click', (e) => {
            const btn = e.target.closest('.btn-delete');
            if (!btn) return;
            const id = btn.getAttribute('data-post-id');
            if (!id) return;
            const confirmed = confirm('Are you sure you want to delete this post?');
            if (!confirmed) return;
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/post/${id}/delete`;
            document.body.appendChild(form);
            form.submit();
        });
    </script>
    
    <style>
        @keyframes trailFade {
            to {
                transform: scale(0);
                opacity: 0;
            }
        }
        
        @keyframes sparkle {
            0% {
                transform: scale(0) rotate(0deg);
                opacity: 1;
            }
            50% {
                transform: scale(1) rotate(180deg);
                opacity: 1;
            }
            100% {
                transform: scale(0) rotate(360deg);
                opacity: 0;
            }
        }
        
        .sparkle {
            position: absolute;
            width: 8px;
            height: 8px;
            background: radial-gradient(circle, #3498db, #2980b9);
            border-radius: 50%;
            pointer-events: none;
            z-index: 1000;
            animation: sparkle 1s ease-out forwards;
        }
        
        /* Enhanced scroll animations */
        .animate-on-scroll {
            opacity: 0;
            transform: translateY(50px);
            transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
        
        .animate-on-scroll.animate {
            opacity: 1;
            transform: translateY(0);
        }
        
        /* Page loading animation */
        body {
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.6s ease;
        }
        
        body.page-enter {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</body>
</html>